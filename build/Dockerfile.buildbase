# Use an official Debian-based image as a parent image
FROM debian:latest AS buildopencv

# Set environment variables
ENV OPENCV_VERSION=4.11.0
ENV GOLANG_VERSION=1.23.5
ENV GOLANG_ARCH=amd64 

# Update and install dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates\
    build-essential \
    cmake \
    git \
    pkg-config \
    libjpeg-dev \
    libtiff-dev \
    libpng-dev \
    libopenexr-dev \
    libwebp-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libgtk-3-dev \
    libatlas-base-dev \
    gfortran \
    python3-dev \
    python3-numpy \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Download OpenCV and OpenCV Contrib
RUN git clone https://github.com/opencv/opencv.git && \
    git clone https://github.com/opencv/opencv_contrib.git && \
    cd opencv && \
    git checkout ${OPENCV_VERSION} && \
    cd ../opencv_contrib && \
    git checkout ${OPENCV_VERSION}

# Build and install OpenCV
RUN cd /opencv && \
    mkdir build && \
    cd build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
          -D CMAKE_INSTALL_PREFIX=/usr/local \
          -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
          -D WITH_FFMPEG=YES \
          -D WITH_V4L=ON \
          -D WITH_LIBV4L=ON \
          -D WITH_PROTOBUF=ON \
          -D INSTALL_C_EXAMPLES=NO \
          -D INSTALL_PYTHON_EXAMPLES=NO \
          -D BUILD_ANDROID_EXAMPLES=NO \
          -D BUILD_DOCS=NO \
          -D BUILD_TESTS=NO \
          -D BUILD_PERF_TESTS=NO \
          -D BUILD_EXAMPLES=NO \
          -D BUILD_opencv_java=NO \
          -D BUILD_opencv_python=NO \
          -D BUILD_opencv_python2=NO \
          -D BUILD_opencv_python3=YES \
          -D OPENCV_GENERATE_PKGCONFIG=ON .. && \
    make -j$(nproc) && \
    make install && \
    ldconfig

# Verification
RUN python3 -c "import cv2; print(cv2.__version__)"


# Install and configure Go
FROM buildopencv AS gostage

# Install Golang
RUN wget https://golang.org/dl/go${GOLANG_VERSION}.linux-${GOLANG_ARCH}.tar.gz && \
    tar -C /usr/local -xzf go${GOLANG_VERSION}.linux-${GOLANG_ARCH}.tar.gz && \
    rm go${GOLANG_VERSION}.linux-${GOLANG_ARCH}.tar.gz


# Set up Go environment
ENV PKG_CONFIG_PATH /usr/local/lib64/pkgconfig
ENV LD_LIBRARY_PATH /usr/local/lib64
ENV CGO_CPPFLAGS -I/usr/local/include
ENV CGO_CXXFLAGS "--std=c++1z"
ENV CGO_LDFLAGS "-L/usr/local/lib -lopencv_core -lopencv_face -lopencv_videoio -lopencv_imgproc -lopencv_highgui -lopencv_imgcodecs -lopencv_objdetect -lopencv_features2d -lopencv_video -lopencv_dnn -lopencv_xfeatures2d -lopencv_plot -lopencv_tracking"

# configure Go
ENV GOROOT /usr/local/go
ENV GOPATH /go
ENV PATH $GOROOT/bin:$PATH

# Set GOPATH mode
RUN mkdir -p ${GOPATH}/src ${GOPATH}/bin
ENV PATH /go/bin:$PATH



#RUN go version && go env